* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.carousel-container {
  position: relative;
  overflow: hidden;
  width: 100%;
  margin: 0 auto;
  padding: 20px 0;
}

.carousel {
  display: flex;
  transition: transform 0.5s ease-in-out;
  /* Đảm bảo transition mượt */
  will-change: transform;
  /* Tối ưu hóa hiệu suất */
}

.carousel-item {
  flex: 0 0 300px;
  margin: 0 10px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  overflow: hidden;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.carousel-item img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.carousel-item-content {
  gap: 10px;
  padding: 15px;
  color: white;
}

.flex.items-center {
  gap: 10px;
  /* Khoảng cách giữa các nút */
}

.magnify-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  padding: 8px;
  cursor: pointer;
  border-radius: 50%;
  z-index: 10;
}

.download-button,
.share-button {
  cursor: pointer;
  color: #ccc;
  /* Màu mặc định */
  font-size: 1rem;
  transition: color 0.3s ease;
}

.download-button:hover,
.share-button:hover {
  color: #3498db;
  /* Màu khi hover */
}

.download-button:active,
.share-button:active {
  color: #2980b9;
  /* Màu khi nhấn */
}

.like-count {
  color: #fff;
  font-weight: 500;
}

.like-button {
  cursor: pointer;
  transition: transform 0.2s;
}

.like-button:hover {
  transform: scale(1.2);
}

.like-button.liked {
  color: #ff4d4d;
}

.carousel-controls {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: 0 10px;
}

.carousel-controls button {
  background: rgba(255, 255, 255, 0.2);
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  cursor: pointer;
  transition: background 0.3s;
}

.carousel-controls button:hover {
  background: rgba(255, 255, 255, 0.4);
}

.like-button {
  cursor: pointer;
  transition: transform 0.2s;
}

.like-button:hover {
  transform: scale(1.2);
}

.like-button.liked {
  color: #ff4d4d;
}

.loader {
  width: 44px;
  height: 44px;
  position: relative;
  animation: rotate 1s linear infinite;
}

.loader svg {
  display: block;
  width: 100%;
  height: 100%;
}

.loader svg rect {
  fill: none;
  stroke: var(--path, #3498db);
  /* Nếu không đặt biến --path thì dùng màu #3498db */
  stroke-width: 10px;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.spinner {
  border: 8px solid #f3f3f3;
  border-top: 8px solid #3498db;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 1s linear infinite;
  margin: 20px auto;
  /* căn giữa */
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}


body {
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #080124;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 20px;
  background-color: #0c0233;
  border-bottom: 1px solid #e5e7eb;
}

main {
  flex: 1;
  /* chiếm phần còn lại của body sau nav */
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: stretch;
  padding: 1rem 8rem;
  gap: 0.5rem;
}

.text {
  text-align: center;
  width: 100%;
  font-size: 20px;
  padding-bottom: 10px;
  color: #ffffff;
}

h1 {
  padding-top: 0%;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  text-align: center;
  font-size: 2.5rem;
  color: #ffffff;
}

h1:hover {
  color: #b8b7b9;
}


/* Chat history sidebar styles */
.chat-history {
  width: 250px;
  background-color: #3e326a;
  border-radius: 8px;
  padding: 1rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  overflow-y: auto;
  max-height: calc(100vh - 100px);
  transition: transform 0.3s ease, margin-left 0.3s ease;
  position: absolute;
  top: 2rem;
  bottom: 2rem;
  left: 2rem;
  z-index: 100;
  overflow: visible;
}

.chat-history.collapsed {
  transform: translateX(-100%);
  margin-left: -2rem;
}

.history-toggle {
  position: absolute;
  top: 50%;
  right: -30px;
  transform: translateY(-50%);
  background-color: #1156a6;
  color: white;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 101;
}

.history-title {
  color: #ffffff;
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #eee;
}

.history-item {
  color: #fdfdfe;
  padding: 0.75rem;
  border-radius: 4px;
  margin-bottom: 0.5rem;
  cursor: pointer;
  transition: background-color 0.2s;
}

.history-item:hover {
  background-color: #f0f0f02c;
}

.history-item.active {
  background-color: #2d2647;
  border-left: 3px solid #1156a6;
}

/* Workspace styles */
.workspace {
  display: flex;
  flex: 1;
  flex-direction: column;
  gap: 0.5rem;
}

.workspace.expanded {
  margin-left: 0px;
}

.text-input-container {
  background-color: #1f2937;
  border: #ffffff;
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.text-input-container label {
  color: #fdfdfe;
  display: block;
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 1rem;
}

#textInput {
  width: 100%;
  min-height: 150px;
  /* Đảm bảo chiều cao tối thiểu */
  background-color: #374151;
  /* Nền tối hơn một chút */
  border: 1px solid #2a2a4a;
  border-radius: 6px;
  padding: 1rem;
  color: #e0e0ff;
  font-size: 1rem;
  resize: vertical;
  /* Cho phép thay đổi kích thước theo chiều dọc */
  outline: none;
  /* Bỏ viền xanh khi focus */
  transition: border-color 0.2s ease;
  margin-bottom: 10px;
}

#textInput:focus {
  border-color: #60a5fa;
  /* Viền xanh khi focus */
}

#textInput::placeholder {
  color: #8080a0;
  /* Màu chữ placeholder */
}

#textInput.error {
  border: 1px solid red;
}

.error-message {
  color: red;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.controls {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 1rem;
}

.params {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

select {
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  color: #eee;
  background-color: #333;
  min-width: 150px;
}

.output-container {
  background-color: #1f2937;
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.output-container label {
  color: #ffffff;
  display: block;
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 1rem;
}

.image-gallery {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1rem;
}

.image-item {
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.image-item img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  display: block;
}

.image-actions {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 0.5rem;
  display: flex;
  justify-content: space-between;
}

.image-actions button {
  background-color: transparent;
  color: white;
  font-size: 0.8rem;
  padding: 0.3rem 0.5rem;
}

.download-all {
  display: block;
  margin: 1rem auto 0;
  padding: 0.5rem 1.5rem;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {

  0%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }
}

@keyframes float {

  0%,
  100% {
    transform: translateY(0px);
  }

  50% {
    transform: translateY(-10px);
  }
}

@keyframes glow {

  0%,
  100% {
    box-shadow: 0 0 5px rgba(59, 130, 246, 0.3);
  }

  50% {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.6);
  }
}

@keyframes rotateY {
  from {
    transform: rotateY(-90deg);
    opacity: 0;
  }

  to {
    transform: rotateY(0deg);
    opacity: 1;
  }
}

@keyframes zoomIn {
  from {
    transform: scale(0.5);
    opacity: 0;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes bounceIn {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }

  50% {
    transform: scale(1.05);
  }

  70% {
    transform: scale(0.9);
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Animation Classes */
.animate-fadeInUp {
  animation: fadeInUp 0.8s ease-out forwards;
}

.animate-fadeInLeft {
  animation: fadeInLeft 0.8s ease-out forwards;
}

.animate-fadeInRight {
  animation: fadeInRight 0.8s ease-out forwards;
}

.animate-fadeInDown {
  animation: fadeInDown 0.8s ease-out forwards;
}

.animate-slideInLeft {
  animation: slideInLeft 1s ease-out forwards;
}

.animate-slideInRight {
  animation: slideInRight 1s ease-out forwards;
}

.animate-rotateY {
  animation: rotateY 1s ease-out forwards;
}

.animate-zoomIn {
  animation: zoomIn 0.6s ease-out forwards;
}

.animate-bounceIn {
  animation: bounceIn 1s ease-out forwards;
}

.animate-pulse-custom {
  animation: pulse 2s infinite;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

/* Delayed animations */
.delay-100 {
  animation-delay: 0.1s;
}

.delay-200 {
  animation-delay: 0.2s;
}

.delay-300 {
  animation-delay: 0.3s;
}

.delay-400 {
  animation-delay: 0.4s;
}

.delay-500 {
  animation-delay: 0.5s;
}

.delay-600 {
  animation-delay: 0.6s;
}

.delay-700 {
  animation-delay: 0.7s;
}

.delay-800 {
  animation-delay: 0.8s;
}

/* Initially hidden elements for animation */
.fade-in-element {
  opacity: 0;
  transform: translateY(30px);
}

/* Cursor Trail Effect */
.cursor-trail {
  position: fixed;
  width: 20px;
  height: 20px;
  background: radial-gradient(circle, rgba(59, 130, 246, 0.8), rgba(147, 51, 234, 0.4), transparent);
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: screen;
  transition: transform 0.1s ease-out;
}

.cursor-glow {
  position: fixed;
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, rgba(59, 130, 246, 0.1), transparent);
  border-radius: 50%;
  pointer-events: none;
  z-index: 9998;
  mix-blend-mode: screen;
  transition: transform 0.2s ease-out;
}

/* Feature Cards Styles */
.feature-card {
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.feature-card:hover {
  transform: translateY(-10px) scale(1.02);
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3), 0 0 30px rgba(59, 130, 246, 0.3);
}

.feature-card::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transform: rotate(45deg);
  transition: all 0.5s;
  opacity: 0;
}

.feature-card:hover::before {
  animation: shimmer 1.5s ease-in-out;
  opacity: 1;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }

  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

.stat-card {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(147, 51, 234, 0.2));
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.stat-card:hover {
  transform: scale(1.05) rotateY(5deg);
  box-shadow: 0 15px 30px rgba(59, 130, 246, 0.3);
}

.art-style-card {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.art-style-card:hover {
  transform: scale(1.1) rotateZ(2deg);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
}

.art-style-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.5s;
}

.art-style-card:hover::before {
  left: 100%;
}

/* Gradient Text */
.gradient-text {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* White text for h1 */
.white-title {
  color: white !important;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 4px;
}

/* Particle effect */
.particles {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
}

.particle {
  position: absolute;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  animation: particle-float 10s linear infinite;
}

@keyframes particle-float {
  0% {
    transform: translateY(100vh) rotate(0deg);
    opacity: 0;
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
}

/* Enhanced hover effects for buttons */
.btn-enhanced {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-enhanced::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-enhanced:hover::before {
  left: 100%;
}

.btn-enhanced:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

/* Floating Elements */
.floating-element {
  animation: float 6s ease-in-out infinite;
}

.floating-element:nth-child(even) {
  animation-delay: 3s;
  animation-direction: reverse;
}

/* Section Layouts */
.zigzag-layout {
  display: grid;
  gap: 2rem;
}

@media (min-width: 768px) {
  .zigzag-layout .zigzag-left {
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }

  .zigzag-layout .zigzag-right {
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }

  .zigzag-right .content-order {
    order: 2;
  }

  .zigzag-right .image-order {
    order: 1;
  }
}

/* Reveal on Scroll */
.reveal {
  opacity: 0;
  transform: translateY(50px);
  transition: all 0.6s ease;
}

.reveal.active {
  opacity: 1;
  transform: translateY(0);
}

.reveal-left {
  opacity: 0;
  transform: translateX(-50px);
  transition: all 0.6s ease;
}

.reveal-left.active {
  opacity: 1;
  transform: translateX(0);
}

.reveal-right {
  opacity: 0;
  transform: translateX(50px);
  transition: all 0.6s ease;
}

.reveal-right.active {
  opacity: 1;
  transform: translateX(0);
}

.reveal-scale {
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.6s ease;
}

.reveal-scale.active {
  opacity: 1;
  transform: scale(1);
}

@media (max-width: 768px) {

  header {
    position: relative;
    flex-direction: column;
    padding: 2rem 1rem;
    min-height: 100px;
  }

  .logo {
    align-self: stretch;
    justify-content: center;
    align-items: center;
    margin-bottom: 0;
    flex: 1;
  }

  .logo img {
    display: none;
  }


  .menu-toggle {
    display: block;
    position: absolute;
    cursor: pointer;
    top: 40px;
    left: 30px;
    color: #eee;
  }

  .menu {
    flex-direction: column;
    gap: 0.5rem;
    width: 100%;
    margin-top: 20px;
    display: none;
  }

  .menu.active {
    display: flex;
  }

  .menu a {
    width: 100%;
    padding: 0.75rem;
    text-align: left;
  }

  .avatar-container {
    position: absolute;
    right: 30px;
  }

  .avatar {
    width: 36px;
    height: 36px;
  }

  main {
    padding: 1rem;
    flex-direction: column;
  }

  .chat-history {
    position: fixed;
    overflow: visible;
    width: 90%;
    max-width: 70%;
    z-index: 200;
    transition: transform 0.3s ease;
  }

  .workspace {
    margin-left: 0;
    width: 100%;
    padding-top: 10px;
  }

  .controls {
    flex-direction: column;
  }

  .params {
    justify-content: space-start;
    width: 100%;
    margin-bottom: 10px;
  }

  .actions {
    display: flex;
    gap: 10px;
  }

  .image-gallery {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  }
}

@media (max-width: 480px) {
  header {
    flex-direction: column;
  }


  .menu {
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
  }

  .menu a {
    font-size: 0.9rem;
    padding: 0.4rem 0.8rem;
  }

  select {
    min-width: 130px;
    font-size: 0.9rem;
  }

  .image-gallery {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  }
}
